/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["swan_modules/math"],{

/***/ "../../node_modules/@onlabsorg/swan-js/lib/modules/math.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@onlabsorg/swan-js/lib/modules/math.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("/**\n *  math - swan stdlib module\n *  ============================================================================\n *  This module contains mathematical functions.\n */\n\n\n\nmodule.exports = {\n\n    /**\n     *  math.E - constant\n     *  ------------------------------------------------------------------------\n     *  Euler's constant and the base of natural logarithms, approximately 2.718.\n     */\n    E: Math.E,\n\n\n    /**\n     *  math.PI - constant\n     *  ------------------------------------------------------------------------\n     *  Ratio of the a circle's circumference to its diameter, approximately 3.14159.\n     */\n    PI: Math.PI,\n\n\n    /**\n     *  math.abs - function\n     *  ------------------------------------------------------------------------\n     *  Returns the absolute value of a number.\n     */\n    abs: Math.abs,\n\n\n    /**\n     *  math.acos - function\n     *  ------------------------------------------------------------------------\n     *  Returns the arccosine of a number.\n     */\n    acos: Math.acos,\n\n\n    /**\n     *  math.acosh - function\n     *  ------------------------------------------------------------------------\n     *  Returns the hyperbolic arccosine of a number.\n     */\n    acosh: Math.acosh,\n\n\n    /**\n     *  math.asin - function\n     *  ------------------------------------------------------------------------\n     *  Returns the arcsine of a number.\n     */\n    asin: Math.asin,\n\n\n    /**\n     *  math.asinh - function\n     *  ------------------------------------------------------------------------\n     *  Returns the hyperbolic arcsine of a number.\n     */\n    asinh: Math.asinh,\n\n\n    /**\n     *  math.atan - function\n     *  ------------------------------------------------------------------------\n     *  Returns the arctangent of a number.\n     */\n    atan: Math.atan,\n\n\n    /**\n     *  math.atanh - function\n     *  ------------------------------------------------------------------------\n     *  Returns the hyperbolic arctangent of a number.\n     */\n    atanh: Math.atanh,\n\n\n    /**\n     *  math.ceil - function\n     *  ------------------------------------------------------------------------\n     *  Returns the smallest integer greater than or equal to a number.\n     */\n    ceil: Math.ceil,\n\n\n    /**\n     *  math.cos - function\n     *  ------------------------------------------------------------------------\n     *  Returns the cosine of a number.\n     */\n    cos: Math.cos,\n\n\n    /**\n     *  math.cosh - function\n     *  ------------------------------------------------------------------------\n     *  Returns the hyperbolic cosine of a number.\n     */\n    cosh: Math.cosh,\n\n\n    /**\n     *  math.exp - function\n     *  ------------------------------------------------------------------------\n     *  Returns E^x, where x is the argument, and E is Euler's constant\n     *  (2.718â€¦, the base of the natural logarithm).\n     */\n    exp: Math.exp,\n\n\n    /**\n     *  math.floor - function\n     *  ------------------------------------------------------------------------\n     *  Returns the largest integer less than or equal to a number.\n     */\n    floor: Math.floor,\n\n\n    /**\n     *  math.log - function\n     *  ------------------------------------------------------------------------\n     *  Returns the natural logarithm of a number.\n     */\n    log: Math.log,\n\n\n    /**\n     *  math.log10 - function\n     *  ------------------------------------------------------------------------\n     *  Returns the base 10 logarithm of a number.\n     */\n    log10: Math.log10,\n\n\n    /**\n     *  math.max - function\n     *  ------------------------------------------------------------------------\n     *  Returns the largest of zero or more numbers.\n     */\n    max: Math.max,\n\n\n    /**\n     *  math.min - function\n     *  ------------------------------------------------------------------------\n     *  Returns the smallest of zero or more numbers.\n     */\n    min: Math.min,\n\n\n    /**\n     *  math.random - function\n     *  ------------------------------------------------------------------------\n     *  Returns a pseudo-random number between 0 and 1.\n     */\n    random: x => Math.random()*x,\n\n\n    /**\n     *  math.round - function\n     *  ------------------------------------------------------------------------\n     *  Returns the value of a number rounded to the nearest integer.\n     */\n    round: Math.round,\n\n\n    /**\n     *  math.sin - function\n     *  ------------------------------------------------------------------------\n     *  Returns the sine of a number.\n     */\n    sin: Math.sin,\n\n\n    /**\n     *  math.sinh - function\n     *  ------------------------------------------------------------------------\n     *  Returns the hyperbolic sine of a number.\n     */\n    sinh: Math.sinh,\n\n\n    /**\n     *  math.sqrt - function\n     *  ------------------------------------------------------------------------\n     *  Returns the positive square root of a number.\n     */\n    sqrt: Math.sqrt,\n\n\n    /**\n     *  math.tan - function\n     *  ------------------------------------------------------------------------\n     *  Returns the tangent of a number.\n     */\n    tan: Math.tan,\n\n\n    /**\n     *  math.tanh - function\n     *  ------------------------------------------------------------------------\n     *  Returns the hyperbolic tangent of a number.\n     */\n    tanh: Math.tanh,\n\n\n    /**\n     *  math.trunc - function\n     *  ------------------------------------------------------------------------\n     *  Returns the integer part of the number x, removing any fractional digits.\n     */\n    trunc: Math.trunc,\n\n\n    /**\n     *  math.hex - function\n     *  ------------------------------------------------------------------------\n     *  Returns a number given its hexadecimal string representation.\n     */\n    hex: s => Number(`0x${s}`),\n\n\n    /**\n     *  math.oct - function\n     *  ------------------------------------------------------------------------\n     *  Returns a number given its octal string representation.\n     */\n    oct: s => Number(`0o${s}`),\n\n\n    /**\n     *  math.bin - function\n     *  ------------------------------------------------------------------------\n     *  Returns a number given its binary string representation.\n     */\n    bin: s => Number(`0b${s}`),\n}\n\n\n//# sourceURL=webpack:///../../node_modules/@onlabsorg/swan-js/lib/modules/math.js?");

/***/ })

}]);